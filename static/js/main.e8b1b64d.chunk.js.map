{"version":3,"sources":["Images/pokemon-logo-png.png","Images/pokemonCardLayout.png","Images/pokeball.png","Components/Header.js","Components/WildPokemon.js","Components/Pokeballs.js","index.js"],"names":["module","exports","Header","className","src","mainLogo","Component","WildPokemon","wildPokemonSection","href","this","props","wildPokeid","wildPokename","pokemonCardLayout","Pokeballs","rows","i","push","pokeball","ReactDOM","render","useState","pokedex","setPokedex","wildPokemon","setWildPokemon","useEffect","encounterWildPokemon","axios","get","min","Math","ceil","max","floor","random","pokeId","then","response","data","console","log","catch","e","catchPokemon","pokemon","state","filter","p","id","length","sort","a","b","name","onClick","to","spy","smooth","duration","map","key","types","type","poketype","abilities","ability","base_experience","stats","s","stat","base_stat","moves","move","document","getElementById"],"mappings":"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","file":"static/js/main.e8b1b64d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon-logo-png.570fcab8.png\";","module.exports = __webpack_public_path__ + \"static/media/pokemonCardLayout.25b04d21.png\";","module.exports = __webpack_public_path__ + \"static/media/pokeball.9aaacdb8.png\";","//\r\n//  Header.js\r\n//  pokedex\r\n//\r\n//  Created by Andres Espitia.\r\n//  Copyright © 2020 Andres Espitia. All rights reserved.\r\n//\r\n\r\nimport React, { Component } from 'react';\r\nimport mainLogo from '../Images/pokemon-logo-png.png';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1 className=\"title\">React.js Pokedex</h1>\r\n                </div>\r\n                <hr />                \r\n                <div>\r\n                    <h3 className=\"subtitle\">Are <span className=\"underline\">YOU</span> ready to catch them all?</h3>\r\n                </div>\r\n                <img src={mainLogo} className=\"pokemonLogo\"/>\r\n                <hr />\r\n                <p className=\"introStatement\">A pokedex built using React.js, ReactDOM, and pokeapi.co</p>\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","//\r\n//  WildPokemon.js\r\n//  pokedex\r\n//\r\n//  Created by Andres Espitia.\r\n//  Copyright © 2020 Andres Espitia. All rights reserved.\r\n//\r\n\r\nimport React, { Component } from 'react'\r\nimport pokemonCardLayout from '../Images/pokemonCardLayout.png';\r\n\r\nexport class WildPokemon extends Component {\r\n    render() {\r\n        return (\r\n            <div wildPokemonSection>\r\n                <h2>\r\n                    A wild <span className=\"underline\"><a className=\"pokemonApiLink\" href={\"https://www.pokeapi.co/api/v2/pokemon/\" + this.props.wildPokeid}>{this.props.wildPokename}</a></span> has appeared!\r\n                </h2>\r\n                <br />\r\n                <div className=\"pokemonCard\">\r\n                    <img src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + \r\n                            this.props.wildPokeid + \".png\"} className=\"sprite wildPokemonHover pokemonImage\" />\r\n                    <img src={pokemonCardLayout} className=\"sprite wildPokemonHover pokemonCardImage\" />\r\n                </div>\r\n\r\n                <br />\r\n                <h3>{this.props.wildPokename}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WildPokemon\r\n","//\r\n// Pokeballs.js\r\n//  pokedex\r\n//\r\n//  Created by Andres Espitia.\r\n//  Copyright © 2020 Andres Espitia. All rights reserved.\r\n//\r\n\r\nimport React, { Component } from 'react'\r\nimport pokeball from '../Images/pokeball.png';\r\n\r\nexport class Pokeballs extends Component {\r\n    render() {\r\n        return <div className=\"pokeballFooter\">\r\n            <p>&copy; Andres Espitia 2019-2020</p>\r\n            <span>\r\n            {function () {\r\n                let rows = [];\r\n                for (let i=0; i < 8; i++) {\r\n                    rows.push(<img src={pokeball} className=\"pokeball\"/>);\r\n                }\r\n                return rows;\r\n            }() }\r\n            </span>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Pokeballs\r\n","//\n//  index.js\n//  pokedex\n//\n//  Created by Andres Espitia.\n//  Copyright © 2020 Andres Espitia. All rights reserved.\n//\n\nimport React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Link, animateScroll } from 'react-scroll';\nimport './index.css';\nimport Header from './Components/Header';\nimport WildPokemon from './Components/WildPokemon';\nimport Pokeballs from './Components/Pokeballs';\n\n\n\n// TODO: allow user to choose what region of pokemon they want to select (Kanto, Johto, all regions..)\n// TODO: make pokemon cards moveable/draggable in the pokedex\n// TODO: make HP, attack, defense, speed, sp atk, sp def values into a bar graph\n// TODO: get strengths and weaknesses for each pokemon:\n\n\nfunction App() {\n    const [pokedex, setPokedex] = useState([])\n    const [wildPokemon, setWildPokemon] = useState({});\n    useEffect(() => {\n        encounterWildPokemon()\n    }, [])\n\n    // Obtains a random pokemon id from the Kanto region (pokemon #1-151)\n    const pokeId = () => {\n        const min = Math.ceil(1)\n        const max = Math.floor(151)\n        return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n\n    // Fetches a wild pokemon for the user to catch\n    const encounterWildPokemon = () => {\n        axios\n        .get('https://pokeapi.co/api/v2/pokemon/' + pokeId())\n        .then(response => {\n            setWildPokemon(response.data)\n            console.log('Success')\n        }).catch((e) => {\n            console.log('Please try later, something went wrong...', e)\n        })\n    }\n\n    // Allows user to catch pokemon and store in their pokedex below\n    const catchPokemon = (pokemon) => {\n        setPokedex(state => {\n            const monExists = (state.filter(p => pokemon.id === p.id).length > 0);\n            if(!monExists) {\n                state = [...state, pokemon]\n                state.sort(function(a, b){\n                    return a.id - b.id\n                })\n            }\n            return state\n        })\n        encounterWildPokemon()\n    }\n\n    //Allows user to delete a caught pokemon from their pokedex\n    const releasePokemon = id => {\n        setPokedex(state => state.filter(p => p.id !== id))\n    }\n\n    return(\n        <div>      \n            <header className=\"header\">\n                <Header />\n            </header>\n            <div className=\"wild-pokemon\" id=\"wild-pokemon\">\n                <WildPokemon wildPokename={wildPokemon.name} wildPokeid={wildPokemon.id}/>\n                <span className=\"inlineButtons\">\n                    <button className=\"catch-btn\" onClick={() => {catchPokemon(wildPokemon)}}>\n                        <Link to=\"wild-pokemon\" spy={true} smooth={true} duration={400} onClick={() => {catchPokemon(wildPokemon)}}>\n                            Catch!\n                        </Link>\n                    </button>\n                    <button className=\"catch-btn\" onClick={() => encounterWildPokemon()}>\n                        <Link to=\"wild-pokemon\" spy={true} smooth={true} duration={400} onClick={() => encounterWildPokemon()}>\n                            Pass...\n                        </Link>\n                    </button>\n                    <button className=\"catch-btn\" >\n                    <Link to=\"pokedex\" spy={true} smooth={true} duration={400}>\n                        See my collection\n                    </Link>\n                    </button>\n                </span>\n            </div>\n\n            <div className=\"pokedex\" id=\"pokedex\">\n                <h2 className=\"collectionHeader\">Your collection so far:</h2>\n                <br/>\n                <div className=\"pokedex-list\">\n                    {pokedex.map(pokemon => (\n                        <div className=\"pokemon\" key={pokemon.id}>\n                        <img src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + \n                            pokemon.id + \".png\"} className=\"sprite\" />\n                            <div className=\"pokemon-name\">\n                                <h3>{pokemon.name}</h3>\n                                <h5>pokemon #{pokemon.id}</h5>\n                            </div>\n                            <hr/>\n                            <div>\n                                {\n                                    pokemon.types.map(p => p.type.name).length > 1 ? (\n                                        <h5 className=\"pokemon-stat\">\n                                            types: <span className=\"pokemon-category\">{pokemon.types.map(p => p.type.name).map(poketype => (<div key={poketype}>&Xi; {poketype}</div>))}</span>\n                                        </h5>\n                                    ) : (\n                                        <h5 className=\"pokemon-stat\">\n                                            type: <span className=\"pokemon-category\">{pokemon.types.map(p => p.type.name).map(poketype => (<div key={poketype}>&Xi;  {poketype}</div>))}</span>\n                                        </h5>\n                                    )\n                                }\n                            </div>\n                            <hr/>\n                            <h5 className=\"pokemon-stat\">\n                                abilities: \n                                <span className=\"pokemon-category\">\n                                    {pokemon.abilities.map(p => p.ability.name).map(a => (<div key={a}>&Xi; {a}</div>))}\n                                </span>\n                            </h5>\n                            <hr/>\n                            <h5 className=\"pokemon-stat\">\n                                base xp: \n                                <div className=\"pokemon-category\">\n                                    {pokemon.base_experience}\n                                </div>\n                            </h5>\n                            <hr/>\n                            <h5 className=\"pokemon-stat\">\n                                stats:  \n                                <span className=\"pokemon-category\">\n                                    {pokemon.stats.map(s => s).map(stat => (<div key={stat.stat.name}>&Xi; {stat.stat.name}: {stat.base_stat}</div>))}\n                                </span>\n                            </h5>\n                            <h5 className=\"pokemon-stat\">\n                                moves:\n                                <span className=\"pokemon-category\">\n                                    {pokemon.moves.map(s => s).map(move => (<div key={move.move.name}>&Xi; {move.move.name}</div>))}\n                                </span>\n                            </h5> \n                            <hr/>\n                            <button className=\"remove\" onClick={() => releasePokemon(pokemon.id)}>&times;</button>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"footerButtons\">\n                <span className=\"inlineButtons\">\n                    <button className=\"catch-btn\" >\n                    <Link to=\"wild-pokemon\" spy={true} smooth={true} duration={400}>\n                        More pokemon!\n                    </Link>\n                    </button>\n                </span>   \n            </div>\n        <Pokeballs />\n    </div>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}